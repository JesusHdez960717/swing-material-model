package com.jhw.swing.models.input.panels;

import com.jhw.swing.material.components.button._MaterialButton;
import com.jhw.swing.material.components.button._MaterialButtonIconTransparent;
import com.jhw.swing.material.components.container.panel._PanelComponent;
import com.jhw.swing.material.components.container.panel._PanelGradient;
import java.awt.Color;
import com.jhw.personalization.core.domain.Personalization;
import com.jhw.personalization.services.PersonalizationHandler;
import com.jhw.utils.interfaces.Update;
import com.jhw.swing.util.interfaces.ModelablePanel;
import com.jhw.swing.material.standards.MaterialColors;
import com.jhw.swing.material.standards.MaterialIcons;

/**
 *
 * @author Jesus Hernandez Barrios (jhernandezb96@gmail.com)
 * @param <T> Tipo de modelos que se va a trabajar.
 */
public class BaseModelInputMixPanel<T> extends _PanelGradient implements Update, ModelablePanel<T> {

    private final ModelMixPanel modelPanel;

    public BaseModelInputMixPanel(ModelMixPanel modelPanel) {
        initComponents();
        this.modelPanel = modelPanel;
        this.panelModelCore.setComponent(this.modelPanel);
        personalize();
        this.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//
    private void initComponents() {

        panelBackground = new com.jhw.swing.material.components.container.panel._PanelGradient();
        panelButtons = new com.jhw.swing.material.components.container.panel._PanelGradient();
        buttonCancel = new com.jhw.swing.material.components.button._MaterialButton();
        buttonDelete = new com.jhw.swing.material.components.button._MaterialButtonIconTransparent();
        panelModelCore = new com.jhw.swing.material.components.container.panel._PanelComponent();

        setPrimaryColor(new java.awt.Color(255, 255, 255));
        setSecundaryColor(new java.awt.Color(255, 255, 255));

        panelBackground.setPrimaryColor(new java.awt.Color(255, 255, 255));
        panelBackground.setSecundaryColor(new java.awt.Color(255, 255, 255));

        panelButtons.setPrimaryColor(new java.awt.Color(255, 255, 255));
        panelButtons.setSecundaryColor(new java.awt.Color(255, 255, 255));

        buttonCancel.setText("Cancelar");
        buttonCancel.setPreferredSize(new java.awt.Dimension(125, 50));

        buttonDelete.setText("_MaterialIconButtonTranspRect1");

        javax.swing.GroupLayout panelButtonsLayout = new javax.swing.GroupLayout(panelButtons);
        panelButtons.setLayout(panelButtonsLayout);
        panelButtonsLayout.setHorizontalGroup(
            panelButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelButtonsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 137, Short.MAX_VALUE)
                .addComponent(buttonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        panelButtonsLayout.setVerticalGroup(
            panelButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelButtonsLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(panelButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout panelModelCoreLayout = new javax.swing.GroupLayout(panelModelCore);
        panelModelCore.setLayout(panelModelCoreLayout);
        panelModelCoreLayout.setHorizontalGroup(
            panelModelCoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelModelCoreLayout.setVerticalGroup(
            panelModelCoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 198, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panelBackgroundLayout = new javax.swing.GroupLayout(panelBackground);
        panelBackground.setLayout(panelBackgroundLayout);
        panelBackgroundLayout.setHorizontalGroup(
            panelBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelButtons, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelModelCore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panelBackgroundLayout.setVerticalGroup(
            panelBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBackgroundLayout.createSequentialGroup()
                .addComponent(panelModelCore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(panelButtons, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>                        

    // Variables declaration - do not modify//:variables
    private com.jhw.swing.material.components.button._MaterialButton buttonCancel;
    private com.jhw.swing.material.components.button._MaterialButtonIconTransparent buttonDelete;
    private com.jhw.swing.material.components.container.panel._PanelGradient panelBackground;
    private com.jhw.swing.material.components.container.panel._PanelGradient panelButtons;
    private com.jhw.swing.material.components.container.panel._PanelComponent panelModelCore;
    // End of variables declaration                   

    private void personalize() {
        buttonDelete.setIcon(MaterialIcons.DELETE_FOREVER);

        buttonDelete.setVisible(modelPanel.getModelPanel().getOldModel() != null);
        buttonDelete.setEnabled(modelPanel.getModelPanel().getOldModel() != null);

        this.setPrimaryColor(MaterialColors.WHITE);
        this.setSecundaryColor(MaterialColors.WHITE);
        buttonCancel.setBackground(PersonalizationHandler.getColor(Personalization.KEY_COLOR_BUTTON_CANCEL));

        this.panelBackground.setBackground(PersonalizationHandler.getColor(Personalization.KEY_COLOR_BACKGROUND_PANEL));
    }

    @Override
    public void update() {
        modelPanel.updateAll();
    }

    @Override
    public T getNewModel() {
        return (T) modelPanel.getModelPanel().getNewModel();
    }

    @Override
    public T getOldModel() {
        return (T) modelPanel.getModelPanel().getOldModel();
    }

    @Override
    public void setOldModel(T model) {
        modelPanel.getModelPanel().setOldModel(model);
    }

    @Override
    public T onDeleteAction() {
        return (T) modelPanel.getModelPanel().onDeleteAction();
    }

    @Override
    public T onCreateAction() {
        return (T) modelPanel.getModelPanel().onCreateAction();
    }

    @Override
    public T onPostCreateAction(T obj) {
        return (T) modelPanel.getModelPanel().onPostCreateAction(obj);
    }

    @Override
    public T onPostDeleteAction(T obj) {
        return (T) modelPanel.getModelPanel().onPostDeleteAction(obj);
    }

    @Override
    public boolean onCancelAction() {
        return modelPanel.getModelPanel().onCancelAction();
    }

    public void setCancelColor(Color cancelColor) {
        buttonCancel.setBackground(cancelColor);
        personalize();
    }

    public Color getCancelColor() {
        return buttonCancel.getBackground();
    }

    public ModelMixPanel getMixPanel() {
        return modelPanel;
    }

    public ModelPanel getModelPanel() {
        return modelPanel.getModelPanel();
    }

    public _MaterialButton getMaterialButtonCancel() {
        return buttonCancel;
    }

    public _PanelGradient getPanelGradientBackground() {
        return panelBackground;
    }

    public _PanelGradient getPanelGradientButtons() {
        return panelButtons;
    }

    public _MaterialButton getButtonCancel() {
        return buttonCancel;
    }

    public _MaterialButtonIconTransparent getButtonDelete() {
        return buttonDelete;
    }

    public _PanelGradient getPanelBackground() {
        return panelBackground;
    }

    public _PanelGradient getPanelButtons() {
        return panelButtons;
    }

    public _PanelComponent getPanelModelCore() {
        return panelModelCore;
    }

    public _MaterialButtonIconTransparent getMaterialButtonDelete() {
        return buttonDelete;
    }

}
