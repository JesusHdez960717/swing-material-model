<#if package?? && package != "">
package ${package};
</#if>

import static utils.Resources.EMF;
import bundles.models.detail._MaterialPanelDetail;
import bundles.models.input.dialogs.DialogModelInput;
import components.table.Column;
import utils.ExceptionHandler;

/**
 *
 * @author ${user}
 */

public class ${name}DetailView extends _MaterialPanelDetail<${name}> {

    public ${name}DetailView() {
        super(new Column[]{
            Column.builder().name("field1").build(),
            Column.builder().name("field2").build(),
            Column.builder().name("field2").build(),
            Column.builder().name("field2").build(),
            Column.builder().name("field2").build()
        });

        this.setHeaderText("${name}");
        //this.setActionColumnVisivility(false);
        this.setActionColumnButtonsVisivility(true, true, false);//no pone el view, no esta implementado todavia
        this.actualizar();
        
        //addOptionsElements();//para si se quieren agregar nuevas opciones
        //this.setOptionPanelVisibility(false);//o si se quiere que no se vea ni el boton
    }

    @Override
    public void actualizar() {
        if (EMF == null) {
            return;
        }
        setCollection(new ${name}Service().find${name}Entities());
        personalize();
    }

    @Override
    public Object[] getRowObject(${name} obj) {
        return new Object[]{obj.get, obj.get, obj.get, obj.get, obj.get};
    }

    @Override
    protected void buttonNuevoActionListener() {
        new DialogModelInput(this, new ${name}InputView());
    }

    @Override
    private void personalize() {
    }

    @Override
    protected ${name} deleteAction(${name} obj) {
        try {
            new ${name}Service().destroy(obj.getId${name}());
            return obj;
        } catch (Exception ex) {
            ExceptionHandler.handleException(ex);
        }
        return null;
    }

    @Override
    protected void editAction(${name} obj) {
        new DialogModelInput(this, new ${name}InputView(obj));
    }

    @Override
    protected void viewAction(${name} obj) {
        System.out.println("NO NECESARIO TODAV√çA.");
    }

/*
    private void addOptionsElements() {
        _MaterialIconButtonTranspRect btn1 = new _MaterialIconButtonTranspRect();
        btn1.setIcon(MaterialIcons.ADD_CIRCLE);
        btn1.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                TOAST.makeNotificationInfo("hihihihihihihihihihihi.");
            }
        });
        this.addOptionElement(btn1);
    }
*/
}
